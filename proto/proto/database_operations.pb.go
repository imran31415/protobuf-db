// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.2
// source: proto/database_operations.proto

package db_annotations

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for supported database column types
type DbColumnType int32

const (
	DbColumnType_DB_TYPE_UNSPECIFIED DbColumnType = 0 // Default value for unspecified type
	DbColumnType_DB_TYPE_INT         DbColumnType = 1 // Integer type
	DbColumnType_DB_TYPE_VARCHAR     DbColumnType = 2 // Variable-length string
	DbColumnType_DB_TYPE_TEXT        DbColumnType = 3 // Large text field
	DbColumnType_DB_TYPE_BOOLEAN     DbColumnType = 4 // Boolean
	DbColumnType_DB_TYPE_DATETIME    DbColumnType = 5 // Date and time
	DbColumnType_DB_TYPE_FLOAT       DbColumnType = 6 // Floating-point number
	DbColumnType_DB_TYPE_DOUBLE      DbColumnType = 7 // Double-precision floating-point
	DbColumnType_DB_TYPE_BINARY      DbColumnType = 8 // Binary data
)

// Enum value maps for DbColumnType.
var (
	DbColumnType_name = map[int32]string{
		0: "DB_TYPE_UNSPECIFIED",
		1: "DB_TYPE_INT",
		2: "DB_TYPE_VARCHAR",
		3: "DB_TYPE_TEXT",
		4: "DB_TYPE_BOOLEAN",
		5: "DB_TYPE_DATETIME",
		6: "DB_TYPE_FLOAT",
		7: "DB_TYPE_DOUBLE",
		8: "DB_TYPE_BINARY",
	}
	DbColumnType_value = map[string]int32{
		"DB_TYPE_UNSPECIFIED": 0,
		"DB_TYPE_INT":         1,
		"DB_TYPE_VARCHAR":     2,
		"DB_TYPE_TEXT":        3,
		"DB_TYPE_BOOLEAN":     4,
		"DB_TYPE_DATETIME":    5,
		"DB_TYPE_FLOAT":       6,
		"DB_TYPE_DOUBLE":      7,
		"DB_TYPE_BINARY":      8,
	}
)

func (x DbColumnType) Enum() *DbColumnType {
	p := new(DbColumnType)
	*p = x
	return p
}

func (x DbColumnType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DbColumnType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_database_operations_proto_enumTypes[0].Descriptor()
}

func (DbColumnType) Type() protoreflect.EnumType {
	return &file_proto_database_operations_proto_enumTypes[0]
}

func (x DbColumnType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DbColumnType.Descriptor instead.
func (DbColumnType) EnumDescriptor() ([]byte, []int) {
	return file_proto_database_operations_proto_rawDescGZIP(), []int{0}
}

// Enum for supported database constraints
type DbConstraint int32

const (
	DbConstraint_DB_CONSTRAINT_UNSPECIFIED DbConstraint = 0 // Default value for no constraint
	DbConstraint_DB_CONSTRAINT_NOT_NULL    DbConstraint = 1 // NOT NULL
	DbConstraint_DB_CONSTRAINT_UNIQUE      DbConstraint = 2 // UNIQUE
	DbConstraint_DB_CONSTRAINT_PRIMARY_KEY DbConstraint = 3 // PRIMARY KEY
)

// Enum value maps for DbConstraint.
var (
	DbConstraint_name = map[int32]string{
		0: "DB_CONSTRAINT_UNSPECIFIED",
		1: "DB_CONSTRAINT_NOT_NULL",
		2: "DB_CONSTRAINT_UNIQUE",
		3: "DB_CONSTRAINT_PRIMARY_KEY",
	}
	DbConstraint_value = map[string]int32{
		"DB_CONSTRAINT_UNSPECIFIED": 0,
		"DB_CONSTRAINT_NOT_NULL":    1,
		"DB_CONSTRAINT_UNIQUE":      2,
		"DB_CONSTRAINT_PRIMARY_KEY": 3,
	}
)

func (x DbConstraint) Enum() *DbConstraint {
	p := new(DbConstraint)
	*p = x
	return p
}

func (x DbConstraint) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DbConstraint) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_database_operations_proto_enumTypes[1].Descriptor()
}

func (DbConstraint) Type() protoreflect.EnumType {
	return &file_proto_database_operations_proto_enumTypes[1]
}

func (x DbConstraint) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DbConstraint.Descriptor instead.
func (DbConstraint) EnumDescriptor() ([]byte, []int) {
	return file_proto_database_operations_proto_rawDescGZIP(), []int{1}
}

// Enum for supported default values
type DbDefault int32

const (
	DbDefault_DB_DEFAULT_UNSPECIFIED       DbDefault = 0 // No default
	DbDefault_DB_DEFAULT_FALSE             DbDefault = 1 // DEFAULT FALSE
	DbDefault_DB_DEFAULT_TRUE              DbDefault = 2 // DEFAULT TRUE
	DbDefault_DB_DEFAULT_CURRENT_TIMESTAMP DbDefault = 3 // DEFAULT CURRENT_TIMESTAMP
	DbDefault_DB_DEFAULT_ZERO              DbDefault = 4 // DEFAULT 0 (for numeric fields)
	DbDefault_DB_DEFAULT_EMPTY_STRING      DbDefault = 5 // DEFAULT '' (empty string)
	DbDefault_DB_DEFAULT_CUSTOM            DbDefault = 6 // Custom default value
)

// Enum value maps for DbDefault.
var (
	DbDefault_name = map[int32]string{
		0: "DB_DEFAULT_UNSPECIFIED",
		1: "DB_DEFAULT_FALSE",
		2: "DB_DEFAULT_TRUE",
		3: "DB_DEFAULT_CURRENT_TIMESTAMP",
		4: "DB_DEFAULT_ZERO",
		5: "DB_DEFAULT_EMPTY_STRING",
		6: "DB_DEFAULT_CUSTOM",
	}
	DbDefault_value = map[string]int32{
		"DB_DEFAULT_UNSPECIFIED":       0,
		"DB_DEFAULT_FALSE":             1,
		"DB_DEFAULT_TRUE":              2,
		"DB_DEFAULT_CURRENT_TIMESTAMP": 3,
		"DB_DEFAULT_ZERO":              4,
		"DB_DEFAULT_EMPTY_STRING":      5,
		"DB_DEFAULT_CUSTOM":            6,
	}
)

func (x DbDefault) Enum() *DbDefault {
	p := new(DbDefault)
	*p = x
	return p
}

func (x DbDefault) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DbDefault) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_database_operations_proto_enumTypes[2].Descriptor()
}

func (DbDefault) Type() protoreflect.EnumType {
	return &file_proto_database_operations_proto_enumTypes[2]
}

func (x DbDefault) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DbDefault.Descriptor instead.
func (DbDefault) EnumDescriptor() ([]byte, []int) {
	return file_proto_database_operations_proto_rawDescGZIP(), []int{2}
}

type DbUpdateAction int32

const (
	DbUpdateAction_DB_UPDATE_ACTION_UNSPECIFIED       DbUpdateAction = 0 // No update action
	DbUpdateAction_DB_UPDATE_ACTION_CURRENT_TIMESTAMP DbUpdateAction = 1 // ON UPDATE CURRENT_TIMESTAMP
)

// Enum value maps for DbUpdateAction.
var (
	DbUpdateAction_name = map[int32]string{
		0: "DB_UPDATE_ACTION_UNSPECIFIED",
		1: "DB_UPDATE_ACTION_CURRENT_TIMESTAMP",
	}
	DbUpdateAction_value = map[string]int32{
		"DB_UPDATE_ACTION_UNSPECIFIED":       0,
		"DB_UPDATE_ACTION_CURRENT_TIMESTAMP": 1,
	}
)

func (x DbUpdateAction) Enum() *DbUpdateAction {
	p := new(DbUpdateAction)
	*p = x
	return p
}

func (x DbUpdateAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DbUpdateAction) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_database_operations_proto_enumTypes[3].Descriptor()
}

func (DbUpdateAction) Type() protoreflect.EnumType {
	return &file_proto_database_operations_proto_enumTypes[3]
}

func (x DbUpdateAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DbUpdateAction.Descriptor instead.
func (DbUpdateAction) EnumDescriptor() ([]byte, []int) {
	return file_proto_database_operations_proto_rawDescGZIP(), []int{3}
}

// Enum for default value functions
type DbDefaultFunction int32

const (
	DbDefaultFunction_DB_DEFAULT_FUNCTION_UNSPECIFIED DbDefaultFunction = 0 // No default function
	DbDefaultFunction_DB_DEFAULT_FUNCTION_UUID        DbDefaultFunction = 1 // UUID()
	DbDefaultFunction_DB_DEFAULT_FUNCTION_NOW         DbDefaultFunction = 2 // NOW()
)

// Enum value maps for DbDefaultFunction.
var (
	DbDefaultFunction_name = map[int32]string{
		0: "DB_DEFAULT_FUNCTION_UNSPECIFIED",
		1: "DB_DEFAULT_FUNCTION_UUID",
		2: "DB_DEFAULT_FUNCTION_NOW",
	}
	DbDefaultFunction_value = map[string]int32{
		"DB_DEFAULT_FUNCTION_UNSPECIFIED": 0,
		"DB_DEFAULT_FUNCTION_UUID":        1,
		"DB_DEFAULT_FUNCTION_NOW":         2,
	}
)

func (x DbDefaultFunction) Enum() *DbDefaultFunction {
	p := new(DbDefaultFunction)
	*p = x
	return p
}

func (x DbDefaultFunction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DbDefaultFunction) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_database_operations_proto_enumTypes[4].Descriptor()
}

func (DbDefaultFunction) Type() protoreflect.EnumType {
	return &file_proto_database_operations_proto_enumTypes[4]
}

func (x DbDefaultFunction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DbDefaultFunction.Descriptor instead.
func (DbDefaultFunction) EnumDescriptor() ([]byte, []int) {
	return file_proto_database_operations_proto_rawDescGZIP(), []int{4}
}

// Enum for index types
type DbIndexType int32

const (
	DbIndexType_DB_INDEX_TYPE_UNSPECIFIED DbIndexType = 0 // Default value for no index
	DbIndexType_DB_INDEX_TYPE_SIMPLE      DbIndexType = 1 // Standard index
	DbIndexType_DB_INDEX_TYPE_COMPOSITE   DbIndexType = 2 // Composite index across multiple columns
	DbIndexType_DB_INDEX_TYPE_FULLTEXT    DbIndexType = 3 // Full-text search index
	DbIndexType_DB_INDEX_TYPE_SPATIAL     DbIndexType = 4 // Spatial index
)

// Enum value maps for DbIndexType.
var (
	DbIndexType_name = map[int32]string{
		0: "DB_INDEX_TYPE_UNSPECIFIED",
		1: "DB_INDEX_TYPE_SIMPLE",
		2: "DB_INDEX_TYPE_COMPOSITE",
		3: "DB_INDEX_TYPE_FULLTEXT",
		4: "DB_INDEX_TYPE_SPATIAL",
	}
	DbIndexType_value = map[string]int32{
		"DB_INDEX_TYPE_UNSPECIFIED": 0,
		"DB_INDEX_TYPE_SIMPLE":      1,
		"DB_INDEX_TYPE_COMPOSITE":   2,
		"DB_INDEX_TYPE_FULLTEXT":    3,
		"DB_INDEX_TYPE_SPATIAL":     4,
	}
)

func (x DbIndexType) Enum() *DbIndexType {
	p := new(DbIndexType)
	*p = x
	return p
}

func (x DbIndexType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DbIndexType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_database_operations_proto_enumTypes[5].Descriptor()
}

func (DbIndexType) Type() protoreflect.EnumType {
	return &file_proto_database_operations_proto_enumTypes[5]
}

func (x DbIndexType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DbIndexType.Descriptor instead.
func (DbIndexType) EnumDescriptor() ([]byte, []int) {
	return file_proto_database_operations_proto_rawDescGZIP(), []int{5}
}

type DbForeignKeyAction int32

const (
	DbForeignKeyAction_DB_FOREIGN_KEY_ACTION_UNSPECIFIED DbForeignKeyAction = 0 // No action
	DbForeignKeyAction_DB_FOREIGN_KEY_ACTION_CASCADE     DbForeignKeyAction = 1 // CASCADE
	DbForeignKeyAction_DB_FOREIGN_KEY_ACTION_SET_NULL    DbForeignKeyAction = 2 // SET NULL
	DbForeignKeyAction_DB_FOREIGN_KEY_ACTION_RESTRICT    DbForeignKeyAction = 3 // RESTRICT
	DbForeignKeyAction_DB_FOREIGN_KEY_ACTION_NO_ACTION   DbForeignKeyAction = 4 // NO ACTION
)

// Enum value maps for DbForeignKeyAction.
var (
	DbForeignKeyAction_name = map[int32]string{
		0: "DB_FOREIGN_KEY_ACTION_UNSPECIFIED",
		1: "DB_FOREIGN_KEY_ACTION_CASCADE",
		2: "DB_FOREIGN_KEY_ACTION_SET_NULL",
		3: "DB_FOREIGN_KEY_ACTION_RESTRICT",
		4: "DB_FOREIGN_KEY_ACTION_NO_ACTION",
	}
	DbForeignKeyAction_value = map[string]int32{
		"DB_FOREIGN_KEY_ACTION_UNSPECIFIED": 0,
		"DB_FOREIGN_KEY_ACTION_CASCADE":     1,
		"DB_FOREIGN_KEY_ACTION_SET_NULL":    2,
		"DB_FOREIGN_KEY_ACTION_RESTRICT":    3,
		"DB_FOREIGN_KEY_ACTION_NO_ACTION":   4,
	}
)

func (x DbForeignKeyAction) Enum() *DbForeignKeyAction {
	p := new(DbForeignKeyAction)
	*p = x
	return p
}

func (x DbForeignKeyAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DbForeignKeyAction) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_database_operations_proto_enumTypes[6].Descriptor()
}

func (DbForeignKeyAction) Type() protoreflect.EnumType {
	return &file_proto_database_operations_proto_enumTypes[6]
}

func (x DbForeignKeyAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DbForeignKeyAction.Descriptor instead.
func (DbForeignKeyAction) EnumDescriptor() ([]byte, []int) {
	return file_proto_database_operations_proto_rawDescGZIP(), []int{6}
}

var file_proto_database_operations_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50001,
		Name:          "db_annotations.db_column",
		Tag:           "bytes,50001,opt,name=db_column",
		Filename:      "proto/database_operations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         50002,
		Name:          "db_annotations.db_primary_key",
		Tag:           "varint,50002,opt,name=db_primary_key",
		Filename:      "proto/database_operations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         50003,
		Name:          "db_annotations.db_index",
		Tag:           "varint,50003,opt,name=db_index",
		Filename:      "proto/database_operations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*DbColumnType)(nil),
		Field:         50004,
		Name:          "db_annotations.db_column_type",
		Tag:           "varint,50004,opt,name=db_column_type,enum=db_annotations.DbColumnType",
		Filename:      "proto/database_operations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: ([]DbConstraint)(nil),
		Field:         50005,
		Name:          "db_annotations.db_constraints",
		Tag:           "varint,50005,rep,packed,name=db_constraints,enum=db_annotations.DbConstraint",
		Filename:      "proto/database_operations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*DbDefault)(nil),
		Field:         50006,
		Name:          "db_annotations.db_default",
		Tag:           "varint,50006,opt,name=db_default,enum=db_annotations.DbDefault",
		Filename:      "proto/database_operations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50007,
		Name:          "db_annotations.custom_default_value",
		Tag:           "bytes,50007,opt,name=custom_default_value",
		Filename:      "proto/database_operations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*DbUpdateAction)(nil),
		Field:         50008,
		Name:          "db_annotations.db_update_action",
		Tag:           "varint,50008,opt,name=db_update_action,enum=db_annotations.DbUpdateAction",
		Filename:      "proto/database_operations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: ([]string)(nil),
		Field:         50009,
		Name:          "db_annotations.db_composite_primary_key",
		Tag:           "bytes,50009,rep,name=db_composite_primary_key",
		Filename:      "proto/database_operations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50010,
		Name:          "db_annotations.db_foreign_key_table",
		Tag:           "bytes,50010,opt,name=db_foreign_key_table",
		Filename:      "proto/database_operations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50011,
		Name:          "db_annotations.db_foreign_key_column",
		Tag:           "bytes,50011,opt,name=db_foreign_key_column",
		Filename:      "proto/database_operations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*DbForeignKeyAction)(nil),
		Field:         50012,
		Name:          "db_annotations.db_on_delete",
		Tag:           "varint,50012,opt,name=db_on_delete,enum=db_annotations.DbForeignKeyAction",
		Filename:      "proto/database_operations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*DbForeignKeyAction)(nil),
		Field:         50013,
		Name:          "db_annotations.db_on_update",
		Tag:           "varint,50013,opt,name=db_on_update,enum=db_annotations.DbForeignKeyAction",
		Filename:      "proto/database_operations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: ([]string)(nil),
		Field:         50014,
		Name:          "db_annotations.db_composite_index",
		Tag:           "bytes,50014,rep,name=db_composite_index",
		Filename:      "proto/database_operations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         50015,
		Name:          "db_annotations.db_auto_increment",
		Tag:           "varint,50015,opt,name=db_auto_increment",
		Filename:      "proto/database_operations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*int32)(nil),
		Field:         50016,
		Name:          "db_annotations.db_precision",
		Tag:           "varint,50016,opt,name=db_precision",
		Filename:      "proto/database_operations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*int32)(nil),
		Field:         50017,
		Name:          "db_annotations.db_scale",
		Tag:           "varint,50017,opt,name=db_scale",
		Filename:      "proto/database_operations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: ([]string)(nil),
		Field:         50018,
		Name:          "db_annotations.db_unique_constraint",
		Tag:           "bytes,50018,rep,name=db_unique_constraint",
		Filename:      "proto/database_operations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: ([]string)(nil),
		Field:         50019,
		Name:          "db_annotations.db_check_constraint",
		Tag:           "bytes,50019,rep,name=db_check_constraint",
		Filename:      "proto/database_operations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50020,
		Name:          "db_annotations.db_character_set",
		Tag:           "bytes,50020,opt,name=db_character_set",
		Filename:      "proto/database_operations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50021,
		Name:          "db_annotations.db_collate",
		Tag:           "bytes,50021,opt,name=db_collate",
		Filename:      "proto/database_operations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*DbDefaultFunction)(nil),
		Field:         50022,
		Name:          "db_annotations.db_default_function",
		Tag:           "varint,50022,opt,name=db_default_function,enum=db_annotations.DbDefaultFunction",
		Filename:      "proto/database_operations.proto",
	},
}

// Extension fields to descriptorpb.FieldOptions.
var (
	// The name of the database column
	//
	// optional string db_column = 50001;
	E_DbColumn = &file_proto_database_operations_proto_extTypes[0]
	// Whether the field is a primary key
	//
	// optional bool db_primary_key = 50002;
	E_DbPrimaryKey = &file_proto_database_operations_proto_extTypes[1]
	// Whether the field should be indexed
	//
	// optional bool db_index = 50003;
	E_DbIndex = &file_proto_database_operations_proto_extTypes[2]
	// The database column type
	//
	// optional db_annotations.DbColumnType db_column_type = 50004;
	E_DbColumnType = &file_proto_database_operations_proto_extTypes[3]
	// The database constraints
	//
	// repeated db_annotations.DbConstraint db_constraints = 50005;
	E_DbConstraints = &file_proto_database_operations_proto_extTypes[4]
	// The default value for the column
	//
	// optional db_annotations.DbDefault db_default = 50006;
	E_DbDefault = &file_proto_database_operations_proto_extTypes[5]
	// Custom default value (used only if db_default is DB_DEFAULT_CUSTOM)
	//
	// optional string custom_default_value = 50007;
	E_CustomDefaultValue = &file_proto_database_operations_proto_extTypes[6]
	// The update action for the column
	//
	// optional db_annotations.DbUpdateAction db_update_action = 50008;
	E_DbUpdateAction = &file_proto_database_operations_proto_extTypes[7]
	// repeated string db_composite_primary_key = 50009;
	E_DbCompositePrimaryKey = &file_proto_database_operations_proto_extTypes[8] // Composite primary keys
	// optional string db_foreign_key_table = 50010;
	E_DbForeignKeyTable = &file_proto_database_operations_proto_extTypes[9] // Referenced table
	// optional string db_foreign_key_column = 50011;
	E_DbForeignKeyColumn = &file_proto_database_operations_proto_extTypes[10] // Referenced column
	// optional db_annotations.DbForeignKeyAction db_on_delete = 50012;
	E_DbOnDelete = &file_proto_database_operations_proto_extTypes[11] // Action on delete
	// optional db_annotations.DbForeignKeyAction db_on_update = 50013;
	E_DbOnUpdate = &file_proto_database_operations_proto_extTypes[12] // Action on update
	// repeated string db_composite_index = 50014;
	E_DbCompositeIndex = &file_proto_database_operations_proto_extTypes[13] // Composite index definitions
	// Attributes for numeric types (e.g., AUTO_INCREMENT)
	//
	// optional bool db_auto_increment = 50015;
	E_DbAutoIncrement = &file_proto_database_operations_proto_extTypes[14]
	// Precision and scale for decimal types
	//
	// optional int32 db_precision = 50016;
	E_DbPrecision = &file_proto_database_operations_proto_extTypes[15] // Total number of digits
	// optional int32 db_scale = 50017;
	E_DbScale = &file_proto_database_operations_proto_extTypes[16] // Number of digits after the decimal point
	// Multi-column UNIQUE constraints
	//
	// repeated string db_unique_constraint = 50018;
	E_DbUniqueConstraint = &file_proto_database_operations_proto_extTypes[17]
	// General CHECK constraints (optional, if needed)
	//
	// repeated string db_check_constraint = 50019;
	E_DbCheckConstraint = &file_proto_database_operations_proto_extTypes[18]
	// Character set for the column
	//
	// optional string db_character_set = 50020;
	E_DbCharacterSet = &file_proto_database_operations_proto_extTypes[19]
	// Collation for the column
	//
	// optional string db_collate = 50021;
	E_DbCollate = &file_proto_database_operations_proto_extTypes[20]
	// optional db_annotations.DbDefaultFunction db_default_function = 50022;
	E_DbDefaultFunction = &file_proto_database_operations_proto_extTypes[21]
)

var File_proto_database_operations_proto protoreflect.FileDescriptor

var file_proto_database_operations_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0e, 0x64, 0x62, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2a, 0xc5, 0x01, 0x0a, 0x0c, 0x44, 0x62, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x42, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a,
	0x0b, 0x44, 0x42, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x13,
	0x0a, 0x0f, 0x44, 0x42, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x41, 0x52, 0x43, 0x48, 0x41,
	0x52, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x42, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54,
	0x45, 0x58, 0x54, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x42, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x42, 0x4f, 0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x42,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x05,
	0x12, 0x11, 0x0a, 0x0d, 0x44, 0x42, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x4c, 0x4f, 0x41,
	0x54, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x42, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44,
	0x4f, 0x55, 0x42, 0x4c, 0x45, 0x10, 0x07, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x42, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x42, 0x49, 0x4e, 0x41, 0x52, 0x59, 0x10, 0x08, 0x2a, 0x82, 0x01, 0x0a, 0x0c,
	0x44, 0x62, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x19,
	0x44, 0x42, 0x5f, 0x43, 0x4f, 0x4e, 0x53, 0x54, 0x52, 0x41, 0x49, 0x4e, 0x54, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x44,
	0x42, 0x5f, 0x43, 0x4f, 0x4e, 0x53, 0x54, 0x52, 0x41, 0x49, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x42, 0x5f, 0x43, 0x4f,
	0x4e, 0x53, 0x54, 0x52, 0x41, 0x49, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x49, 0x51, 0x55, 0x45, 0x10,
	0x02, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x42, 0x5f, 0x43, 0x4f, 0x4e, 0x53, 0x54, 0x52, 0x41, 0x49,
	0x4e, 0x54, 0x5f, 0x50, 0x52, 0x49, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x03,
	0x2a, 0xbd, 0x01, 0x0a, 0x09, 0x44, 0x62, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1a,
	0x0a, 0x16, 0x44, 0x42, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x42,
	0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x44, 0x42, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x54,
	0x52, 0x55, 0x45, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x44, 0x42, 0x5f, 0x44, 0x45, 0x46, 0x41,
	0x55, 0x4c, 0x54, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45,
	0x53, 0x54, 0x41, 0x4d, 0x50, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x42, 0x5f, 0x44, 0x45,
	0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x5a, 0x45, 0x52, 0x4f, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17,
	0x44, 0x42, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59,
	0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x42, 0x5f,
	0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x06,
	0x2a, 0x5a, 0x0a, 0x0e, 0x44, 0x62, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x1c, 0x44, 0x42, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x26, 0x0a, 0x22, 0x44, 0x42, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54,
	0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x10, 0x01, 0x2a, 0x73, 0x0a, 0x11,
	0x44, 0x62, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x0a, 0x1f, 0x44, 0x42, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f,
	0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x44, 0x42, 0x5f, 0x44, 0x45, 0x46,
	0x41, 0x55, 0x4c, 0x54, 0x5f, 0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x55,
	0x49, 0x44, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x44, 0x42, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55,
	0x4c, 0x54, 0x5f, 0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x57, 0x10,
	0x02, 0x2a, 0x9a, 0x01, 0x0a, 0x0b, 0x44, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x42, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x18, 0x0a, 0x14, 0x44, 0x42, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x53, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x44, 0x42,
	0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50,
	0x4f, 0x53, 0x49, 0x54, 0x45, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x42, 0x5f, 0x49, 0x4e,
	0x44, 0x45, 0x58, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x54, 0x45, 0x58,
	0x54, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x42, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x50, 0x41, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x04, 0x2a, 0xcb,
	0x01, 0x0a, 0x12, 0x44, 0x62, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x21, 0x44, 0x42, 0x5f, 0x46, 0x4f, 0x52, 0x45,
	0x49, 0x47, 0x4e, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d,
	0x44, 0x42, 0x5f, 0x46, 0x4f, 0x52, 0x45, 0x49, 0x47, 0x4e, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x53, 0x43, 0x41, 0x44, 0x45, 0x10, 0x01, 0x12,
	0x22, 0x0a, 0x1e, 0x44, 0x42, 0x5f, 0x46, 0x4f, 0x52, 0x45, 0x49, 0x47, 0x4e, 0x5f, 0x4b, 0x45,
	0x59, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x4e, 0x55, 0x4c,
	0x4c, 0x10, 0x02, 0x12, 0x22, 0x0a, 0x1e, 0x44, 0x42, 0x5f, 0x46, 0x4f, 0x52, 0x45, 0x49, 0x47,
	0x4e, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53,
	0x54, 0x52, 0x49, 0x43, 0x54, 0x10, 0x03, 0x12, 0x23, 0x0a, 0x1f, 0x44, 0x42, 0x5f, 0x46, 0x4f,
	0x52, 0x45, 0x49, 0x47, 0x4e, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x4e, 0x4f, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x3a, 0x3c, 0x0a, 0x09,
	0x64, 0x62, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd1, 0x86, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x62, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x3a, 0x45, 0x0a, 0x0e, 0x64, 0x62,
	0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd2, 0x86, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x62, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65,
	0x79, 0x3a, 0x3a, 0x0a, 0x08, 0x64, 0x62, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd3, 0x86, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x3a, 0x63, 0x0a,
	0x0e, 0x64, 0x62, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd4,
	0x86, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x64, 0x62, 0x5f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x44, 0x62, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x64, 0x62, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x3a, 0x64, 0x0a, 0x0e, 0x64, 0x62, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0xd5, 0x86, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x64, 0x62,
	0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x44, 0x62, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x0d, 0x64, 0x62, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x3a, 0x59, 0x0a, 0x0a, 0x64, 0x62, 0x5f, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd6, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x64, 0x62, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x44,
	0x62, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x09, 0x64, 0x62, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x3a, 0x51, 0x0a, 0x14, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd7, 0x86, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x69, 0x0a, 0x10, 0x64, 0x62, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd8, 0x86, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x64, 0x62, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x44, 0x62, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0e, 0x64, 0x62, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x3a, 0x58, 0x0a, 0x18, 0x64, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x65, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd9, 0x86, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x64, 0x62, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x3a, 0x50, 0x0a, 0x14, 0x64,
	0x62, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xda, 0x86, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x62, 0x46, 0x6f,
	0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x3a, 0x52, 0x0a,
	0x15, 0x64, 0x62, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x5f,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xdb, 0x86, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64,
	0x62, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x3a, 0x65, 0x0a, 0x0c, 0x64, 0x62, 0x5f, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xdc, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x64, 0x62, 0x5f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x44, 0x62, 0x46, 0x6f, 0x72, 0x65,
	0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64, 0x62,
	0x4f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a, 0x65, 0x0a, 0x0c, 0x64, 0x62, 0x5f, 0x6f,
	0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xdd, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x64, 0x62, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x44, 0x62, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64, 0x62, 0x4f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x3a,
	0x4d, 0x0a, 0x12, 0x64, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0xde, 0x86, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x64, 0x62,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x3a, 0x4b,
	0x0a, 0x11, 0x64, 0x62, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xdf, 0x86, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x64, 0x62, 0x41, 0x75,
	0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x3a, 0x42, 0x0a, 0x0c, 0x64,
	0x62, 0x5f, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe0, 0x86, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x64, 0x62, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x3a,
	0x3a, 0x0a, 0x08, 0x64, 0x62, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe1, 0x86, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x64, 0x62, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x3a, 0x51, 0x0a, 0x14, 0x64,
	0x62, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xe2, 0x86, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x64, 0x62, 0x55, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x3a, 0x4f,
	0x0a, 0x13, 0x64, 0x62, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe3, 0x86, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x64, 0x62,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x3a,
	0x49, 0x0a, 0x10, 0x64, 0x62, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x74, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xe4, 0x86, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x62, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x3a, 0x3e, 0x0a, 0x0a, 0x64, 0x62,
	0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe5, 0x86, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x62, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x3a, 0x72, 0x0a, 0x13, 0x64, 0x62,
	0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xe6, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x64, 0x62, 0x5f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x44, 0x62, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x64, 0x62, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x41,
	0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6d, 0x72,
	0x61, 0x6e, 0x33, 0x31, 0x34, 0x31, 0x35, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2d, 0x64, 0x62, 0x2f, 0x64, 0x62, 0x2d, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x3b, 0x64, 0x62, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_database_operations_proto_rawDescOnce sync.Once
	file_proto_database_operations_proto_rawDescData = file_proto_database_operations_proto_rawDesc
)

func file_proto_database_operations_proto_rawDescGZIP() []byte {
	file_proto_database_operations_proto_rawDescOnce.Do(func() {
		file_proto_database_operations_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_database_operations_proto_rawDescData)
	})
	return file_proto_database_operations_proto_rawDescData
}

var file_proto_database_operations_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_proto_database_operations_proto_goTypes = []any{
	(DbColumnType)(0),                 // 0: db_annotations.DbColumnType
	(DbConstraint)(0),                 // 1: db_annotations.DbConstraint
	(DbDefault)(0),                    // 2: db_annotations.DbDefault
	(DbUpdateAction)(0),               // 3: db_annotations.DbUpdateAction
	(DbDefaultFunction)(0),            // 4: db_annotations.DbDefaultFunction
	(DbIndexType)(0),                  // 5: db_annotations.DbIndexType
	(DbForeignKeyAction)(0),           // 6: db_annotations.DbForeignKeyAction
	(*descriptorpb.FieldOptions)(nil), // 7: google.protobuf.FieldOptions
}
var file_proto_database_operations_proto_depIdxs = []int32{
	7,  // 0: db_annotations.db_column:extendee -> google.protobuf.FieldOptions
	7,  // 1: db_annotations.db_primary_key:extendee -> google.protobuf.FieldOptions
	7,  // 2: db_annotations.db_index:extendee -> google.protobuf.FieldOptions
	7,  // 3: db_annotations.db_column_type:extendee -> google.protobuf.FieldOptions
	7,  // 4: db_annotations.db_constraints:extendee -> google.protobuf.FieldOptions
	7,  // 5: db_annotations.db_default:extendee -> google.protobuf.FieldOptions
	7,  // 6: db_annotations.custom_default_value:extendee -> google.protobuf.FieldOptions
	7,  // 7: db_annotations.db_update_action:extendee -> google.protobuf.FieldOptions
	7,  // 8: db_annotations.db_composite_primary_key:extendee -> google.protobuf.FieldOptions
	7,  // 9: db_annotations.db_foreign_key_table:extendee -> google.protobuf.FieldOptions
	7,  // 10: db_annotations.db_foreign_key_column:extendee -> google.protobuf.FieldOptions
	7,  // 11: db_annotations.db_on_delete:extendee -> google.protobuf.FieldOptions
	7,  // 12: db_annotations.db_on_update:extendee -> google.protobuf.FieldOptions
	7,  // 13: db_annotations.db_composite_index:extendee -> google.protobuf.FieldOptions
	7,  // 14: db_annotations.db_auto_increment:extendee -> google.protobuf.FieldOptions
	7,  // 15: db_annotations.db_precision:extendee -> google.protobuf.FieldOptions
	7,  // 16: db_annotations.db_scale:extendee -> google.protobuf.FieldOptions
	7,  // 17: db_annotations.db_unique_constraint:extendee -> google.protobuf.FieldOptions
	7,  // 18: db_annotations.db_check_constraint:extendee -> google.protobuf.FieldOptions
	7,  // 19: db_annotations.db_character_set:extendee -> google.protobuf.FieldOptions
	7,  // 20: db_annotations.db_collate:extendee -> google.protobuf.FieldOptions
	7,  // 21: db_annotations.db_default_function:extendee -> google.protobuf.FieldOptions
	0,  // 22: db_annotations.db_column_type:type_name -> db_annotations.DbColumnType
	1,  // 23: db_annotations.db_constraints:type_name -> db_annotations.DbConstraint
	2,  // 24: db_annotations.db_default:type_name -> db_annotations.DbDefault
	3,  // 25: db_annotations.db_update_action:type_name -> db_annotations.DbUpdateAction
	6,  // 26: db_annotations.db_on_delete:type_name -> db_annotations.DbForeignKeyAction
	6,  // 27: db_annotations.db_on_update:type_name -> db_annotations.DbForeignKeyAction
	4,  // 28: db_annotations.db_default_function:type_name -> db_annotations.DbDefaultFunction
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	22, // [22:29] is the sub-list for extension type_name
	0,  // [0:22] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_proto_database_operations_proto_init() }
func file_proto_database_operations_proto_init() {
	if File_proto_database_operations_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_database_operations_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   0,
			NumExtensions: 22,
			NumServices:   0,
		},
		GoTypes:           file_proto_database_operations_proto_goTypes,
		DependencyIndexes: file_proto_database_operations_proto_depIdxs,
		EnumInfos:         file_proto_database_operations_proto_enumTypes,
		ExtensionInfos:    file_proto_database_operations_proto_extTypes,
	}.Build()
	File_proto_database_operations_proto = out.File
	file_proto_database_operations_proto_rawDesc = nil
	file_proto_database_operations_proto_goTypes = nil
	file_proto_database_operations_proto_depIdxs = nil
}
